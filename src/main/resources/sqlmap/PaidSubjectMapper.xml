<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nasi.portal.data.mapper.PaidSubjectMapper" >
  <resultMap id="BaseResultMap" type="com.nasi.portal.data.model.PaidSubject" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="subject_name_cn" property="subjectNameCn" jdbcType="VARCHAR" />
    <result column="subject_name_en" property="subjectNameEn" jdbcType="VARCHAR" />
    <result column="subject_type" property="subjectType" jdbcType="INTEGER" />
    <result column="subject_money" property="subjectMoney" jdbcType="BIGINT" />
    <result column="subject_status" property="subjectStatus" jdbcType="INTEGER" />
    <result column="page_order" property="pageOrder" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, subject_name_cn, subject_name_en, subject_type, subject_money, subject_status, 
    page_order, create_time, update_time, create_user, update_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nasi.portal.data.model.PaidSubjectCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `paid_subject`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start != null and start >= 0 " >
      limit #{start}
    </if>
    <if test="start != null and start >= 0 and end != null and end >= 0" >
      , #{end}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `paid_subject`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `paid_subject`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nasi.portal.data.model.PaidSubjectCriteria" >
    delete from `paid_subject`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nasi.portal.data.model.PaidSubject" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `paid_subject` (subject_name_cn, subject_name_en, subject_type, 
      subject_money, subject_status, page_order, 
      create_time, update_time, create_user, 
      update_user)
    values (#{subjectNameCn,jdbcType=VARCHAR}, #{subjectNameEn,jdbcType=VARCHAR}, #{subjectType,jdbcType=INTEGER}, 
      #{subjectMoney,jdbcType=BIGINT}, #{subjectStatus,jdbcType=INTEGER}, #{pageOrder,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, 
      #{updateUser,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.nasi.portal.data.model.PaidSubject" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `paid_subject`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subjectNameCn != null" >
        subject_name_cn,
      </if>
      <if test="subjectNameEn != null" >
        subject_name_en,
      </if>
      <if test="subjectType != null" >
        subject_type,
      </if>
      <if test="subjectMoney != null" >
        subject_money,
      </if>
      <if test="subjectStatus != null" >
        subject_status,
      </if>
      <if test="pageOrder != null" >
        page_order,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subjectNameCn != null" >
        #{subjectNameCn,jdbcType=VARCHAR},
      </if>
      <if test="subjectNameEn != null" >
        #{subjectNameEn,jdbcType=VARCHAR},
      </if>
      <if test="subjectType != null" >
        #{subjectType,jdbcType=INTEGER},
      </if>
      <if test="subjectMoney != null" >
        #{subjectMoney,jdbcType=BIGINT},
      </if>
      <if test="subjectStatus != null" >
        #{subjectStatus,jdbcType=INTEGER},
      </if>
      <if test="pageOrder != null" >
        #{pageOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nasi.portal.data.model.PaidSubjectCriteria" resultType="java.lang.Integer" >
    select count(*) from `paid_subject`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `paid_subject`
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.subjectNameCn != null" >
        subject_name_cn = #{record.subjectNameCn,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectNameEn != null" >
        subject_name_en = #{record.subjectNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectType != null" >
        subject_type = #{record.subjectType,jdbcType=INTEGER},
      </if>
      <if test="record.subjectMoney != null" >
        subject_money = #{record.subjectMoney,jdbcType=BIGINT},
      </if>
      <if test="record.subjectStatus != null" >
        subject_status = #{record.subjectStatus,jdbcType=INTEGER},
      </if>
      <if test="record.pageOrder != null" >
        page_order = #{record.pageOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `paid_subject`
    set id = #{record.id,jdbcType=BIGINT},
      subject_name_cn = #{record.subjectNameCn,jdbcType=VARCHAR},
      subject_name_en = #{record.subjectNameEn,jdbcType=VARCHAR},
      subject_type = #{record.subjectType,jdbcType=INTEGER},
      subject_money = #{record.subjectMoney,jdbcType=BIGINT},
      subject_status = #{record.subjectStatus,jdbcType=INTEGER},
      page_order = #{record.pageOrder,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nasi.portal.data.model.PaidSubject" >
    update `paid_subject`
    <set >
      <if test="subjectNameCn != null" >
        subject_name_cn = #{subjectNameCn,jdbcType=VARCHAR},
      </if>
      <if test="subjectNameEn != null" >
        subject_name_en = #{subjectNameEn,jdbcType=VARCHAR},
      </if>
      <if test="subjectType != null" >
        subject_type = #{subjectType,jdbcType=INTEGER},
      </if>
      <if test="subjectMoney != null" >
        subject_money = #{subjectMoney,jdbcType=BIGINT},
      </if>
      <if test="subjectStatus != null" >
        subject_status = #{subjectStatus,jdbcType=INTEGER},
      </if>
      <if test="pageOrder != null" >
        page_order = #{pageOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nasi.portal.data.model.PaidSubject" >
    update `paid_subject`
    set subject_name_cn = #{subjectNameCn,jdbcType=VARCHAR},
      subject_name_en = #{subjectNameEn,jdbcType=VARCHAR},
      subject_type = #{subjectType,jdbcType=INTEGER},
      subject_money = #{subjectMoney,jdbcType=BIGINT},
      subject_status = #{subjectStatus,jdbcType=INTEGER},
      page_order = #{pageOrder,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>