<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nasi.portal.data.mapper.PaidOrderMapper" >
  <resultMap id="BaseResultMap" type="com.nasi.portal.data.model.PaidOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="real_money" property="realMoney" jdbcType="BIGINT" />
    <result column="coupon_code" property="couponCode" jdbcType="VARCHAR" />
    <result column="coupon_money" property="couponMoney" jdbcType="BIGINT" />
    <result column="need_pay_money" property="needPayMoney" jdbcType="BIGINT" />
    <result column="subject_ids" property="subjectIds" jdbcType="VARCHAR" />
    <result column="paid_account" property="paidAccount" jdbcType="VARCHAR" />
    <result column="paid_user" property="paidUser" jdbcType="VARCHAR" />
    <result column="paid_bank" property="paidBank" jdbcType="VARCHAR" />
    <result column="paid_money" property="paidMoney" jdbcType="BIGINT" />
    <result column="paid_desc" property="paidDesc" jdbcType="VARCHAR" />
    <result column="paid_phone" property="paidPhone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, order_status, create_user, update_user, create_time, update_time, real_money, 
    coupon_code, coupon_money, need_pay_money, subject_ids, paid_account, paid_user, 
    paid_bank, paid_money, paid_desc, paid_phone
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nasi.portal.data.model.PaidOrderCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `paid_order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start != null and start >= 0 " >
      limit #{start}
    </if>
    <if test="start != null and start >= 0 and end != null and end >= 0" >
      , #{end}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `paid_order`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `paid_order`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nasi.portal.data.model.PaidOrderCriteria" >
    delete from `paid_order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nasi.portal.data.model.PaidOrder" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `paid_order` (user_id, order_status, create_user, 
      update_user, create_time, update_time, 
      real_money, coupon_code, coupon_money, 
      need_pay_money, subject_ids, paid_account, 
      paid_user, paid_bank, paid_money, 
      paid_desc, paid_phone)
    values (#{userId,jdbcType=BIGINT}, #{orderStatus,jdbcType=INTEGER}, #{createUser,jdbcType=BIGINT}, 
      #{updateUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{realMoney,jdbcType=BIGINT}, #{couponCode,jdbcType=VARCHAR}, #{couponMoney,jdbcType=BIGINT}, 
      #{needPayMoney,jdbcType=BIGINT}, #{subjectIds,jdbcType=VARCHAR}, #{paidAccount,jdbcType=VARCHAR}, 
      #{paidUser,jdbcType=VARCHAR}, #{paidBank,jdbcType=VARCHAR}, #{paidMoney,jdbcType=BIGINT}, 
      #{paidDesc,jdbcType=VARCHAR}, #{paidPhone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nasi.portal.data.model.PaidOrder" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `paid_order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="realMoney != null" >
        real_money,
      </if>
      <if test="couponCode != null" >
        coupon_code,
      </if>
      <if test="couponMoney != null" >
        coupon_money,
      </if>
      <if test="needPayMoney != null" >
        need_pay_money,
      </if>
      <if test="subjectIds != null" >
        subject_ids,
      </if>
      <if test="paidAccount != null" >
        paid_account,
      </if>
      <if test="paidUser != null" >
        paid_user,
      </if>
      <if test="paidBank != null" >
        paid_bank,
      </if>
      <if test="paidMoney != null" >
        paid_money,
      </if>
      <if test="paidDesc != null" >
        paid_desc,
      </if>
      <if test="paidPhone != null" >
        paid_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realMoney != null" >
        #{realMoney,jdbcType=BIGINT},
      </if>
      <if test="couponCode != null" >
        #{couponCode,jdbcType=VARCHAR},
      </if>
      <if test="couponMoney != null" >
        #{couponMoney,jdbcType=BIGINT},
      </if>
      <if test="needPayMoney != null" >
        #{needPayMoney,jdbcType=BIGINT},
      </if>
      <if test="subjectIds != null" >
        #{subjectIds,jdbcType=VARCHAR},
      </if>
      <if test="paidAccount != null" >
        #{paidAccount,jdbcType=VARCHAR},
      </if>
      <if test="paidUser != null" >
        #{paidUser,jdbcType=VARCHAR},
      </if>
      <if test="paidBank != null" >
        #{paidBank,jdbcType=VARCHAR},
      </if>
      <if test="paidMoney != null" >
        #{paidMoney,jdbcType=BIGINT},
      </if>
      <if test="paidDesc != null" >
        #{paidDesc,jdbcType=VARCHAR},
      </if>
      <if test="paidPhone != null" >
        #{paidPhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nasi.portal.data.model.PaidOrderCriteria" resultType="java.lang.Integer" >
    select count(*) from `paid_order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `paid_order`
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realMoney != null" >
        real_money = #{record.realMoney,jdbcType=BIGINT},
      </if>
      <if test="record.couponCode != null" >
        coupon_code = #{record.couponCode,jdbcType=VARCHAR},
      </if>
      <if test="record.couponMoney != null" >
        coupon_money = #{record.couponMoney,jdbcType=BIGINT},
      </if>
      <if test="record.needPayMoney != null" >
        need_pay_money = #{record.needPayMoney,jdbcType=BIGINT},
      </if>
      <if test="record.subjectIds != null" >
        subject_ids = #{record.subjectIds,jdbcType=VARCHAR},
      </if>
      <if test="record.paidAccount != null" >
        paid_account = #{record.paidAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.paidUser != null" >
        paid_user = #{record.paidUser,jdbcType=VARCHAR},
      </if>
      <if test="record.paidBank != null" >
        paid_bank = #{record.paidBank,jdbcType=VARCHAR},
      </if>
      <if test="record.paidMoney != null" >
        paid_money = #{record.paidMoney,jdbcType=BIGINT},
      </if>
      <if test="record.paidDesc != null" >
        paid_desc = #{record.paidDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.paidPhone != null" >
        paid_phone = #{record.paidPhone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `paid_order`
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      real_money = #{record.realMoney,jdbcType=BIGINT},
      coupon_code = #{record.couponCode,jdbcType=VARCHAR},
      coupon_money = #{record.couponMoney,jdbcType=BIGINT},
      need_pay_money = #{record.needPayMoney,jdbcType=BIGINT},
      subject_ids = #{record.subjectIds,jdbcType=VARCHAR},
      paid_account = #{record.paidAccount,jdbcType=VARCHAR},
      paid_user = #{record.paidUser,jdbcType=VARCHAR},
      paid_bank = #{record.paidBank,jdbcType=VARCHAR},
      paid_money = #{record.paidMoney,jdbcType=BIGINT},
      paid_desc = #{record.paidDesc,jdbcType=VARCHAR},
      paid_phone = #{record.paidPhone,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nasi.portal.data.model.PaidOrder" >
    update `paid_order`
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realMoney != null" >
        real_money = #{realMoney,jdbcType=BIGINT},
      </if>
      <if test="couponCode != null" >
        coupon_code = #{couponCode,jdbcType=VARCHAR},
      </if>
      <if test="couponMoney != null" >
        coupon_money = #{couponMoney,jdbcType=BIGINT},
      </if>
      <if test="needPayMoney != null" >
        need_pay_money = #{needPayMoney,jdbcType=BIGINT},
      </if>
      <if test="subjectIds != null" >
        subject_ids = #{subjectIds,jdbcType=VARCHAR},
      </if>
      <if test="paidAccount != null" >
        paid_account = #{paidAccount,jdbcType=VARCHAR},
      </if>
      <if test="paidUser != null" >
        paid_user = #{paidUser,jdbcType=VARCHAR},
      </if>
      <if test="paidBank != null" >
        paid_bank = #{paidBank,jdbcType=VARCHAR},
      </if>
      <if test="paidMoney != null" >
        paid_money = #{paidMoney,jdbcType=BIGINT},
      </if>
      <if test="paidDesc != null" >
        paid_desc = #{paidDesc,jdbcType=VARCHAR},
      </if>
      <if test="paidPhone != null" >
        paid_phone = #{paidPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nasi.portal.data.model.PaidOrder" >
    update `paid_order`
    set user_id = #{userId,jdbcType=BIGINT},
      order_status = #{orderStatus,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      real_money = #{realMoney,jdbcType=BIGINT},
      coupon_code = #{couponCode,jdbcType=VARCHAR},
      coupon_money = #{couponMoney,jdbcType=BIGINT},
      need_pay_money = #{needPayMoney,jdbcType=BIGINT},
      subject_ids = #{subjectIds,jdbcType=VARCHAR},
      paid_account = #{paidAccount,jdbcType=VARCHAR},
      paid_user = #{paidUser,jdbcType=VARCHAR},
      paid_bank = #{paidBank,jdbcType=VARCHAR},
      paid_money = #{paidMoney,jdbcType=BIGINT},
      paid_desc = #{paidDesc,jdbcType=VARCHAR},
      paid_phone = #{paidPhone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>